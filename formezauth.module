<?php

/**
 * Include main API functions.
 */

module_load_include('inc', 'formezauth', 'formezauth_admin');
module_load_include('inc', 'formezauth', 'formezauth_block');
module_load_include('inc', 'formezauth', 'formezauth_user');


/**
 * Implements hook_menu().
 *
 * @see formezauth_form()
 */
function formezauth_menu() {

  $items = array();

  $items['admin/config/services/formezauth'] = array(
    'title' => 'FormezAuth',
    'description' => 'Configurazione dell\'autenticazione tramite FormezAuth',
    'page callback' => '_formezauth_hello',
    'access arguments' => array('access administration pages'),
    'weight'=>0,
    'type' => MENU_NORMAL_ITEM,
  );


  $items['admin/config/services/formezauth/init'] = array(
    'title' => 'Variabili FormezAuth',
    'description' => 'Variabili',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('formezauth_form'),
    'access arguments' => array('access administration pages'),
    'weight'=>5,
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/config/services/formezauth/map'] = array(
    'title' => 'Mappatura campi',
    'description' => 'Mappatura dei campi FormezAuth con i campi resi disponibili sul server',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('formezauth_form2'),
    'access arguments' => array('access administration pages'),
    'weight'=>10,
    'type' => MENU_LOCAL_TASK,
  );

  /*
  $items['admin/config/services/formezauth/test'] = array(
    'title' => 'Test',
    'description' => 'Pagina di test',
    'page callback' => '_formezauth_test_page1',
    'access arguments' => array('access administration pages'),
    'weight'=>30,
    'type' => MENU_LOCAL_TASK,
  );
	*/

  $items['admin/config/services/formezauth/fields'] = array(
    'title' => 'Campi disponibili',
    'description' => 'Documentazione dei campi disponibili dal server, tramite interrogazione al file doc/fields',
    'page callback' => '_formezauth_server_fields',
    'access arguments' => array('access administration pages'),
    'weight'=>20,
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/config/services/formezauth/refresh_fields'] = array(
    'title' => 'Campi disponibili',
    'description' => 'Aggiornamento e documentazione dei campi disponibili dal server, tramite interrogazione al file doc/fields',
    'page callback' => '_formezauth_refresh_server_fields',
    'access arguments' => array('access administration pages'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}


/**
 * Pagina di test: non serve a nulla se non in fase di sviluppo
 * per testare cose.
 */
function _formezauth_test_page1(){

	global $user;

	//$provider=oauthconnector_provider_load('formezauth');
  if(function_exists('profile2_load_by_user')){
  	$profile=profile2_load_by_user($user);
  }
  dsm($profile);
  dsm($user);
  $u = user_load($user->uid);
  dsm($u);
	$out="";

  $uuid_user = entity_uuid_load('user', array($user->uuid));
  dsm($uuid_user);
	return $out;
}


/**
 *
 * Questa non sembra funzionare... 
**/
function formezauth_form_profile2_form_alter(&$form, &$form_state) {
  // Your alterations.
}


/**
 * Implements oauthconnector_fetch_field_value
 * Aggiunge una creazione di sessione che sar√† poi utilizzata in fase di login
 * @see formezauth_user_login()
 */
function formezauth_oauthconnector_fetch_field_value_alter($a, $b, $c){
  $_SESSION['oauth_user_data']=$b;
}

/**
 * Implements hook_connector_action_alter().
 * We change the default connector to redirect to our own action.
 */
function formezauth_connector_action_alter(&$connector_actions) {

  /*
  $fp=fopen('/tmp/debug.fa.log', "w");
  fwrite($fp, json_encode($connector_actions));
  fclose($fp);
  */
  $connector_actions['default']['create account callback'] = '_formezauth_create_account';
}

/**
 *  Carica il javascript che apre l'autenticazione nel popup
 *
 */
function formezauth_init($all_pages=true){

  // Check for front page
    if(drupal_is_front_page() || $all_pages){
      drupal_add_js( drupal_get_path('module', 'formezauth') . '/formezauth.js');
    }
}

// fine -- 
